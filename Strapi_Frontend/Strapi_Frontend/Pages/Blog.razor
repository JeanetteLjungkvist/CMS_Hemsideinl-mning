@page "/blog"

@inject HttpClient Http
@using Microsoft.Extensions.Configuration;
@using Models
@using System.Net.Http.Headers
@inject IConfiguration Configuration

<PageTitle>My Blog</PageTitle>

@if (allPosts == null)
{
    <p><em>Loading...</em></p>
}

else
{
    <section class="text-gray-600 body-font">
        <div class="container px-5 py-4 mx-auto">
            <div class="text-center mb-20">
                <h1 class="sm:text-3xl text-2xl font-medium title-font text-gray-900 mb-4">My Blog</h1>
                <p class="text-base leading-relaxed xl:w-2/4 lg:w-3/4 mx-auto text-gray-500s">Here I share my thoughts</p>
                <div class="flex mt-6 justify-center">
                    <div class="w-16 h-1 rounded-full bg-indigo-500 inline-flex"></div>
                </div>
            </div>
            <div class="flex flex-wrap -m-3">
                
                @foreach (var post in allPosts.data)
                {
                    <div class="card mb-3">
                        <div class="card-body">
                            <h5 class="card-title">@post.BlogTitle</h5>
                            <p class="card-text"><small class="text-muted">Published: @post.Date</small></p>
                            <p class="card-text">@post.BlogText</p>
                            <p class="card-text"><small class="text-muted">Written by: @post.Author</small></p>
                        </div>
                    </div>

                }
            </div>
        </div>
    </section>
}

@code {
    private BlogPostList allPosts = null;
    public string strapi_api_url;
    public string strapi_api_token;

    protected override async Task OnInitializedAsync()
    {
        strapi_api_url = Configuration["AppSettings:STRAPI_API_URL"];
        strapi_api_token = Configuration["AppSettings:STRAPI_API_TOKEN"];

        var url = "{STRAPI_API_URL}/api/blogposts";

        Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", strapi_api_token);

        allPosts = await Http.GetFromJsonAsync<BlogPostList>(url.Replace("{STRAPI_API_URL}", strapi_api_url));

    }

    public class BlogPost
    {
        public int Id { get; set; }

        public string? BlogTitle { get; set; }
        
        public string? BlogText { get; set; }
        
        public string? Author { get; set; }

        public DateTime Date { get; set; }

    }

    public class BlogPostList
    {
        public List<BlogPost> data { get; set; }
    }

}

